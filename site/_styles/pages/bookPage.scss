@use 'defs/size';
@use 'defs/breakpoint' as bp;

@use 'partials/block';
@use 'partials/content';
@use 'partials/book';
@use 'partials/util';

@mixin verticalScrollbar
{
    &::-webkit-scrollbar { width: 5px; }
    &::-webkit-scrollbar-thumb
    {
        background: var(--c_bg-shade-3);
        &:hover { background: var(--c_bg-shade-4); }
    }
}

main > .contentBlock
{
    @extend %block;

    > header
    {
        @extend %blockHeader;
        border-bottom: 1px solid var(--c_border);

        .typeCircle
        {
            color: white;
            font-size: 23px;
            font-weight: bold;

            @each $type in 'definition', 'theorem', 'method', 'other'
            {
                &--#{$type} { @include block.blockTypeContainer($type); }
            }

            &--other span
            {
                position: relative;
                top: -2px;
                left: -1px;
            }
        }

        .info
        {
            display: flex;
            flex-direction: column;
            gap: 5px;

            .title, .desc { line-height: initial; }

            .title
            {
                font-size: 115%;
                font-weight: bold;
            }

            .desc
            {
                color: var(--c_text-shade-1);
                font-size: 95%;
            }
        }

        @include bp.max(mini)
        {
            flex-direction: row;

            .typeCircle
            {
                @include util.size(45px);
                font-size: 20px;
            }

            .info
            {
                .title  { font-size: 110%; }
                .desc   { display: none; }
            }
        }
    }

    > .content
    {
        @extend %blockSection, %CONTENT;
    }
}

main > .taskUsage,
main > .bookRefs
{
    @extend %block;

    > header
    {
        @extend %blockSection;

        display: flex;
        align-items: center;
        gap: size.$gapSmall;

        border-bottom: 1px solid var(--c_border);

        font-size: 115%;
        font-weight: bold;
    }
}

main > .taskUsage
{
    .taskList
    {
        padding: size.$gap;
        max-height: 250px;
        overflow: auto;

        @include verticalScrollbar;
        
        .scrollContainer
        {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(65px, 1fr));
            grid-auto-rows: 30px;
            gap: size.$gapSmall;

            .task
            {
                @include util.flexCC;
                max-width: 100px;

                border: 1px solid var(--c_border);
                border-radius: size.$borderRadius;
                background: var(--c_bg-shade-1);

                color: var(--c_text-shade-1);
                text-decoration: none;

                @include util.transition(color, background-color);

                &:hover
                {
                    color: var(--c_text);
                    background-color: var(--c_bg-shade-2);
                }
            }
        }
    }
}

main > .bookRefs
{
    .dependencies, .dependents
    {
        @extend %blockSectionCondensed;
        
        display: flex;
        gap: size.$gapSmall;
        align-items: center;
        
        color: var(--c_text-shade-1);

        background: var(--c_bg-shade-1);
        border-bottom: 1px solid var(--c_border);
    }

    .dependents { border-top: 1px solid var(--c_border); }

    > .list
    {
        max-height: 300px;
        overflow: auto;
        @include verticalScrollbar;

        .bookRef { @extend %bookRef; }
    }
}